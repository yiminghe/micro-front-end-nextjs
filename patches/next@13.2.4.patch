diff --git a/dist/client/index.js b/dist/client/index.js
index 2848e4da7a6b0f5fdea209ce999dec5c47206f5f..d51ba817ea2c0cd2a8d70e64e2ae6f2206ea9ee6 100644
--- a/dist/client/index.js
+++ b/dist/client/index.js
@@ -4,6 +4,7 @@ Object.defineProperty(exports, "__esModule", {
 });
 exports.initialize = initialize;
 exports.hydrate = hydrate;
+exports.getReactRoot=()=>reactRoot;
 exports.emitter = exports.router = exports.version = void 0;
 var _async_to_generator = require("@swc/helpers/lib/_async_to_generator.js").default;
 var _extends = require("@swc/helpers/lib/_extends.js").default;
diff --git a/dist/client/route-loader.js b/dist/client/route-loader.js
index 5d0d3f9b87abfc1f5daf26e5f63fb89ba884684c..c43a31c4f855bb170e743f7135c0fc3359c338de 100644
--- a/dist/client/route-loader.js
+++ b/dist/client/route-loader.js
@@ -234,6 +234,22 @@ function createRouteLoader(assetPrefix) {
             });
         },
         loadRoute (route, prefetch) {
+            const alls = Array.from(entrypoints.keys());
+            let stay = false;
+            let p = route;
+            if (p !== "/_error") {
+                if (p.slice(1).indexOf("/") !== -1) {
+                    p = route.slice(0, route.slice(1).indexOf("/") + 1);
+                }
+                for (const e of alls) {
+                    if (e.startsWith(p)) {
+                        stay = true;
+                    }
+                }
+                if (!stay) {
+                    return Promise.reject("exit current micro app");
+                }
+            }
             return withFuture(route, routes, ()=>{
                 let devBuildPromiseResolve;
                 if (process.env.NODE_ENV === 'development') {